const tests = [
"attr-boolean-placeholder",
"attr-placeholder-escaped-undefined",
"attr-placeholder-unescaped-undefined",
"attr-value-obj-custom-tag",
"attr-value-obj",
"attributes-dynamic-custom-tag-mixed",
"attributes-dynamic-custom-tag",
"attrs",
"concise-verbose",
"concise",
"custom-tag-autodiscover-repeated-names",
"custom-tag-autodiscover",
"custom-tag-data-placeholders",
"custom-tag-with-directives",
"dynamic-attributes-string",
"error-duplicate-macro",
"error-invalid-if-attr",
"error-invalid-if-else-attr",
"error-invalid-if-else-if-attr",
"error-invalid-if-else-if-else-attr",
"for-array-index",
"for-attr-separator-html",
"for-attr-separator-status-var",
"for-attr-separator",
"for-attr-status-var-string",
"for-attr",
"for-if-attr",
"for-iterator-as-target",
"for-iterator-attr",
"for-iterator-status-var-attr",
"for-iterator-status-var",
"for-iterator",
"for-native",
"for-props-attr",
"for-props-map",
"for-props-separator",
"for-props-status-var-separator",
"for-props-status-var",
"for-props",
"for-range-descending-step",
"for-range-descending",
"for-range-from-to-expr",
"for-range-step-2",
"for-range-step-neg2",
"for-range-to-expr",
"for-range",
"for-tag-array-expression",
"for-tag-native",
"for-tag-separator-status-var",
"for-tag-separator",
"for-tag-status-var",
"for-tag",
"helpers-empty-notEmpty-import",
"if-attr",
"if-else-attr",
"if-else-if-attr",
"if-else-if-else-attr",
"include-attr",
"include-body-empty/include",
"include-body-empty",
"include-body/include",
"include-body",
"include-component",
"include-data-body/include",
"include-data-body",
"include-data",
"include-dynamic",
"include-hyphen-attrs-multiple",
"include-hyphen-attrs",
"include-layout-data-attrs/layout",
"include-layout-data-attrs",
"include-layout-data/layout",
"include-layout-data",
"include-layout-v3-compat/layout",
"include-layout-v3-compat",
"include-layout/layout",
"include-layout",
"include-renderBody-data-and-attrs",
"include-renderBody-no-data",
"include-renderBody-string-arg",
"include-renderBody",
"include-safeHTML",
"include-string",
"include-whitespace/include",
"include-whitespace",
"include",
"inline-script",
"invoke",
"nested-tag-bad",
"nested-tag-shorthand-complex-logic-repeated",
"nested-tag-shorthand-simple-conditional",
"nested-tag-shorthand-simple-repeated-conditional",
"nested-tags-concise",
"nested-tags-deep",
"nested-tags-empty-body",
"nested-tags-repeated-parent",
"nested-tags-repeated",
"nested-tags-self-closing",
"nested-tags",
"paren-grouping",
"parsed-text-tag",
"script-nonce",
"simple-conditionals",
"simple",
"space-in-complex-attr-value",
"static-trees",
"syntax-concise",
"syntax-mixed",
"syntax-simple-concise",
"syntax-simple-mixed",
"syntax-simple-verbose",
"syntax-verbose",
"tabs-tab-new",
"tabs-tab",
"template-transformer-array",
"template-transformer",
"unless-else",
"var-assign",
"while-attr",
].filter(x => x.indexOf("/") === -1);

const exists = require("fs").existsSync;
const exec = require("child_process").execSync;
tests.forEach((name) => {
  if (exists(`test/render/fixtures-deprecated/${name}`)) {
    exec(`cp -R test/render/fixtures/${name} test/render/fixtures-deprecated/${name}2`)
  } else {
    exec(`cp -R test/render/fixtures/${name} test/render/fixtures-deprecated/${name}`)
  }
})